import numpy as np
from numpy import zeros

def step1(u,u_1,xv,yv,t,f,V,C1,C2,Nx,Ny,dt,b,q,x,y):

    u_xx = zeros(shape=(Nx+1,Ny+1))
    u_yy = zeros(shape=(Nx+1,Ny+1))
    
    
    u_xx[1:-1,1:-1]=0.5*(q(xv[1:-1],yv[:,1:-1])+q(xv[2:],yv[:,1:-1]))*(u_1[2:,1:-1]-u_1[1:-1,1:-1])-0.5*(q(xv[1:-1],yv[:,1:-1])+q(xv[:-2],yv[:,1:-1]))*(u_1[1:-1,1:-1]-u_1[:-2,1:-1])
    
    u_yy[1:-1,1:-1]=0.5*(q(xv[1:-1],yv[:,1:-1])+q(xv[1:-1],yv[:,2:]))*(u_1[1:-1,2:]-u_1[1:-1,1:-1])-0.5*(q(xv[1:-1],yv[:,1:-1])+q(xv[1:-1],yv[:,:-2]))*(u_1[1:-1,1:-1]-u_1[1:-1,:-2])
    
    #inner points 
    u[1:-1,1:-1] = ((1+0.5*b*dt)*u_1[1:-1,1:-1] +dt*V(xv[1:-1],yv[:,1:-1]) + 0.5*dt**2*f(xv[1:-1],yv[:,1:-1],0) +0.5*C1*u_xx[1:-1,1:-1] + 0.5*C2*u_yy[1:-1,1:-1])/( 1. + 0.5*b*dt )

    #edges
    u[0,0] = (u_1[0,0]*(2+dt*b)+2*dt*V(0,0)+2*C1*q(0,0)*(u_1[1,0]-u_1[0,0])+2*C2*q(0,0)*(u_1[0,1]-u_1[0,0]) + dt**2*f(0,0,0))/(2.+dt*b)

    u[0,Ny] =(u_1[0,Ny]*(2+dt*b)+2*dt*V(0,yv[:,Ny])+2*C1*q(0,yv[:,Ny])*(u_1[1,Ny]-u_1[0,Ny])+2*C2*q(0,yv[:,Ny])*(u_1[0,Ny-1]-u_1[0,Ny]) + dt**2*f(0,yv[:,Ny],0))/(2+dt*b)

    u[Nx,0] =(u_1[Nx,0]*(2+dt*b)+2*dt*V(xv[Nx],0)+2*C1*q(xv[Nx],0)*(u_1[Nx-1,0]-u_1[Nx,0])+2*C2*q(xv[Nx],0)*(u_1[Nx,1]-u_1[Nx,0]) + dt**2*f(xv[Nx],0,0))/(2.+dt*b)


    u[Nx,Ny] = (u_1[Nx,Ny]*(2+dt*b)+2*dt*V(xv[Nx],yv[:,Ny])+2*C1*q(xv[Nx],yv[:,Ny])*(u_1[Nx-1,Ny]-u_1[Nx,Ny])+2*C2*q(xv[Nx],yv[:,Ny])*(u_1[Nx,Ny-1]-u_1[Nx,Ny]) + dt**2*f(xv[Nx],yv[:,Ny],0))/(2.+dt*b) 
    
    
    #boudary for x=0
    u[0,1:-1] = ((1+0.5*b*dt)*u_1[0,1:-1]+dt*V(xv[0],yv[:,1:-1])+0.5*dt**2*f(xv[0],yv[:,1:-1],0)+C1*q(xv[0],yv[:,1:-1])*(u_1[1,1:-1]-u_1[0,1:-1])+0.25*C2*((q(xv[0],yv[:,1:-1])+q(xv[0],yv[:,2:]))*(u_1[0,2:]-u_1[0,1:-1])-(q(xv[0],yv[:,1:-1])+q(xv[0],yv[:,:-2]))*(u_1[0,1:-1]-u_1[0,:-2])))/( 1. + 0.5*b*dt )
    
    
    
    #boudary for x=Nx
    u[Nx,1:-1] = ((1+0.5*b*dt)*u_1[Nx,1:-1]+dt*V(xv[Nx],yv[:,1:-1])+0.5*dt**2*f(xv[Nx],yv[:,1:-1],0)+C1*q(xv[Nx],yv[:,1:-1])*(u_1[Nx-1,1:-1]-u_1[Nx,1:-1])+0.25*C2*((q(xv[Nx],yv[:,1:-1])+q(xv[Nx],yv[:,2:]))*(u_1[Nx,2:]-u_1[Nx,1:-1])-(q(xv[Nx],yv[:,1:-1])+q(xv[Nx],yv[:,:-2]))*(u_1[Nx,1:-1]-u_1[Nx,:-2])))/( 1. + 0.5*b*dt )

     
    

    #boudary for y=0
    u[1:-1,0] = ((1+0.5*b*dt)*u_1[1:-1,0]+dt*V(x[1:-1],0)+0.5*dt**2*f(x[1:-1],0,0)+C2*q(x[1:-1],0)*(u_1[1:-1,1]-u_1[1:-1,0])+0.25*C1*((q(x[1:-1],0)+q(x[2:],0))*(u_1[2:,0]-u_1[1:-1,0])-(q(x[1:-1],0)+q(x[:-2],0))*(u_1[1:-1,0]-u_1[:-2,0])))/( 1. + 0.5*b*dt )
    
    
    #boudary for y=Nxy
    u[1:-1,Ny] = ((1+0.5*b*dt)*u_1[1:-1,Ny]+dt*V(x[1:-1],y[Ny])+0.5*dt**2*f(x[1:-1],y[Ny],0)+C2*q(x[1:-1],y[Ny])*(u_1[1:-1,Ny-1]-u_1[1:-1,Ny])+0.25*C1*((q(x[1:-1],y[Ny])+q(x[2:],y[Ny]))*(u_1[2:,Ny]-u_1[1:-1,Ny])-(q(x[1:-1],y[Ny])+q(x[:-2],y[Ny]))*(u_1[1:-1,Ny]-u_1[:-2,Ny])))/( 1. + 0.5*b*dt )
    
    return u


def step(u,u_1,u_2,x,y,t,f,C1,C2,Nx,Ny,dt,b,q,n,x1,y1):

    u_xx = zeros(shape=(Nx+1,Ny+1))
    u_yy = zeros(shape=(Nx+1,Ny+1))

    u_xx[1:-1,1:-1]=0.5*(q(x[1:-1],y[:,1:-1])+q(x[2:],y[:,1:-1]))*(u_1[2:,1:-1]-u_1[1:-1,1:-1])-0.5*(q(x[1:-1],y[:,1:-1])+q(x[:-2],y[:,1:-1]))*(u_1[1:-1,1:-1]-u_1[:-2,1:-1])

    u_yy[1:-1,1:-1]=0.5*(q(x[1:-1],y[:,1:-1])+q(x[1:-1],y[:,2:]))*(u_1[1:-1,2:]-u_1[1:-1,1:-1])-0.5*(q(x[1:-1],y[:,1:-1])+q(x[1:-1],y[:,:-2]))*(u_1[1:-1,1:-1]-u_1[1:-1,:-2])

    #inner points 
    u[1:-1,1:-1] = ((2+b*dt)*u_1[1:-1,1:-1] -u_2[1:-1,1:-1] + dt**2*f(x[1:-1],y[:,1:-1],t[n]) +C1*u_xx[1:-1,1:-1] + C2*u_yy[1:-1,1:-1])/( 1. + b*dt )

    #edges
    u[0,0] = (u_1[0,0]*(2+dt*b)-u_2[0,0]+2*C1*q(0,0)*(u_1[1,0]-u_1[0,0])+2*C2*q(0,0)*(u_1[0,1]-u_1[0,0]) + dt**2*f(0,0,t[n]))/(1.+dt*b)
    
    u[0,-1] = (u_1[0,-1]*(2+dt*b)-u_2[0,-1]+2*C1*q(0,y[:,-1])*(u_1[1,-1]-u_1[0,-1])+2*C2*q(0,y[:,-1])*(u_1[0,-2]-u_1[0,-1]) + dt**2*f(0,y[:,-1],t[n]))/(1.+dt*b)
    
    u[Nx,0] =(u_1[Nx,0]*(2+dt*b)-u_2[Nx,0]+2*C1*q(x[Nx],0)*(u_1[Nx-1,0]-u_1[Nx,0])+2*C2*q(x[Nx],0)*(u_1[Nx,1]-u_1[Nx,0]) + dt**2*f(x[Nx],0,t[n]))/(1.+dt*b)
    
    
    u[-1,-1] = (u_1[-1,-1]*(2+dt*b)-u_2[-1,-1]+2*C1*q(x[-1],y[:,-1])*(u_1[-2,-1]-u_1[-1,-1])+2*C2*q(x[-1],y[:,-1])*(u_1[-1,-2]-u_1[-1,-1]) + dt**2*f(x[-1],y[:,-1],t[n]))/(1.+dt*b)
    
    
    
    
    
    #boudary for x=0
    u[0,1:-1] = ((2+b*dt)*u_1[0,1:-1] -u_2[0,1:-1] + dt**2*f(x[0],y[:,1:-1],t[n])+2*C1*q(x[0],y[:,1:-1])*(u_1[1,1:-1]-u_1[0,1:-1])+0.5*C2*((q(x[0],y[:,1:-1])+q(x[0],y[:,2:]))*(u_1[0,2:]-u_1[0,1:-1])-(q(x[0],y[:,1:-1])+q(x[0],y[:,:-2]))*(u_1[0,1:-1]-u_1[0,:-2])))/( 1. + b*dt )

    #boudary for x=Nx
    u[Nx,1:-1] = ((2+b*dt)*u_1[Nx,1:-1]-u_2[Nx,1:-1]+dt**2*f(x[Nx],y[:,1:-1],t[n])+2*C1*q(x[Nx],y[:,1:-1])*(u_1[Nx-1,1:-1]-u_1[Nx,1:-1])+0.5*C2*((q(x[Nx],y[:,1:-1])+q(x[Nx],y[:,2:]))*(u_1[Nx,2:]-u_1[Nx,1:-1])-(q(x[Nx],y[:,1:-1])+q(x[Nx],y[:,:-2]))*(u_1[Nx,1:-1]-u_1[Nx,:-2])))/( 1. + b*dt )

    

    #boudary for y=0
    u[1:-1,0] = ((2+b*dt)*u_1[1:-1,0]-u_2[1:-1,0]+dt**2*f(x1[1:-1],y[:,0],t[n])+2*C2*q(x1[1:-1],y[:,0])*(u_1[1:-1,1]-u_1[1:-1,0])+0.5*C1*((q(x1[1:-1],y[:,0])+q(x1[2:],y[:,0]))*(u_1[2:,0]-u_1[1:-1,0])-(q(x1[1:-1],y[:,0])+q(x1[:-2],y[:,0]))*(u_1[1:-1,0]-u_1[:-2,0])))/( 1. + b*dt )
    
    
    #boudary for y=Nxy 
    
    u[1:-1,-1] = ((2+b*dt)*u_1[1:-1,-1]-u_2[1:-1,-1]+dt**2*f(x1[1:-1],y[:,-1],t[n])+2*C2*q(x1[1:-1],y[:,-1])*(u_1[1:-1,-2]-u_1[1:-1,-1])+0.5*C1*((q(x1[1:-1],y[:,-1])+q(x1[2:],y[:,-1]))*(u_1[2:,-1]-u_1[1:-1,-1])-(q(x1[1:-1],y[:,-1])+q(x1[:-2],y[:,-1]))*(u_1[1:-1,-1]-u_1[:-2,-1])))/( 1. + b*dt )
    
    return u





