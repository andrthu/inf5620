from numpy import *
from numpy.random import *
from vib_undamped_verify_mms import solver



def test_quadratic():
    T_list=[1,4,10,100]
    dt_list=[0.5,0.2,0.1,0.01]
    error_list = zeros(16)
    teller=0


    for i in range(4):
        for j in range(4):
            I=10*ranf()+1
            w=ranf()+0.1
            V=10*ranf()+1
            b=10*ranf()+1

            n=int(round(T_list[i]/dt_list[j]))
            t=linspace(0,n*dt_list[j],n+1)

            q=lambda x: b*x**2+V*x+I
            f=lambda x : 2*b + (w**2)*q(x)
            
            u,t=solver(I,w,V,dt_list[j],T_list[i],f)

            error_list[teller]=abs(amax(u-q(t)))
            print error_list[teller],dt_list[j], 2/w  
            teller = teller +1

    assert amax(error_list)<10**(-12)

        
